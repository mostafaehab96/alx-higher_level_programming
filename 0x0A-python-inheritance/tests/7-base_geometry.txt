Simple tests for BaseGeomtry class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> i = 0
>>> bg.integer_validator("i")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("i", i)
Traceback (most recent call last):
        ...
ValueError: i must be greater than 0
>>> i = 0.5
>>> bg.integer_validator("i", i)
Traceback (most recent call last):
	...
TypeError: i must be an integer
>>> i = -1
>>> bg.integer_validator("i", i)
Traceback (most recent call last):
	...
ValueError: i must be greater than 0
>>> bg.integer_validator("age", 1)
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
	...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
        ...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
        ...
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
        ...
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
        ...
TypeError: age must be an integer
>>> bg.integer_validator("age", (3,))
Traceback (most recent call last):
        ...
TypeError: age must be an integer


